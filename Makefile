# avrtmon
# Makefile
# Uses the rules defined by Prof. Giorgio Grisetti in the file 'avr.mk'
# Paolo Lucchesi - Tue 06 Aug 2019 02:27:30 AM CEST
# Refer to files located under 'resources/gnu-make/' for further informations
.POSIX:
.SUFFIXES: # Reset all implicit rules

# Detect passed target architecture, passed in the ARCH variable (can be passed
# also from the shell).
# Possible values are 'avr' or 'host'. Defaults to 'avr'
ARCH ?= avr

# Codebase directory structure
SRCDIR := sources
INCDIR := include
OBJDIR := objects/$(ARCH)
RESDIR := resources

# The file containing specific rules for an architecture must be located in
# $(RESDIR)/gnu-make/arch-<ARCH>.mk
include $(RESDIR)/gnu-make/arch-$(ARCH).mk

# Search Paths
vpath %.c $(SRCDIR)/$(ARCH)
vpath %.c $(SRCDIR)
vpath %.s $(SRCDIR)/$(ARCH)
vpath %.s $(SRCDIR)
vpath %.o $(OBJDIR)


# TODO: Are BINS and OBJECTS required?
# Executable files containing the 'main' routine (e.g. foo-bin, bar.hex)
BINS := 

# Object files to be generated by GNU Make (e.g. foobar.o)
# Do not prefix the object directory (e.g. foo.o is OK, objects/foo.o is not)
OBJECTS := 


# Objects and binaries recipes

$(OBJDIR)/%.o:	%.c 
	$(CC) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/%.o:	%.s 
	$(AS) $(ASFLAGS) -c -o $@ $<

# Preserve object files to be automatically deleted as intermediate targets
.PRECIOUS: $(OBJDIR)/%.o


# Test (from the PC's OS) a module of the project
# Tests are done by performing:
#   $(call host_test [additional compiler args])
# The function expect to find a source file named 'tests/<test_name>.c'
# You can also choose a test method defining the variable 'TEST_WITH' in your
# shell. Supported option are none (i.e. execute as-is), 'gdb' and 'less'
test_%: CFLAGS += $(TESTFLAGS)

test_crc: $(addprefix $(OBJDIR)/, crc.o)
	$(call host_test)

test_packet: $(addprefix $(OBJDIR)/, crc.o packet.o)
	$(call host_test)

test_temperature:
	$(call host_test, $(SRCDIR)/temperature.c tests/mock_nvm.c)

test_config:
	$(RESDIR)/bin/config-gen -c $(RESDIR)/config/test.csv -S tests/config.c \
	  -H tests/include/config.h
	$(call host_test, tests/config.c tests/mock_nvm.c)
	rm tests/{config.c,include/config.h}

test_serial: tests/serial_test.hex
	# TODO: Write an automated test for host-side
	# TODO: Provide also 'serial.o' object file


# Standard make PHONY rules
.PHONY:	clean all

all: clean # TODO: Set this when it's time

clean:	
	rm -f $(OBJDIR)/../{avr,host}/* $(BINS) tests/bin/* sources/config.c \
	  include/config.h tests/{config.c,include/config.h}

